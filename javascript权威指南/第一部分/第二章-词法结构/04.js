


//属性访问表达式
//属性访问表达式运算得到一个对象属性或一个数组元素的值。javascript为属性访问定义了两种语法
//    expression.indentifier
//    expression[expression]
//第一种写法是一个表达式后跟随一个句点和标识符。表达式指定对象，标识符则指定需要访问的属性的名称。
//第二种写法是使用方括号，方括号内是另外一个表达式(这种方法适用于对象和数组)。这种表达式指定要访问的属性的名称或者代表要访问数组元素的索引
//显然.identifier的写法更加简单，但需要注意的是，这种方式只适合于要访问的属性名称是合法的标识符，并且需要知道要访问的属性的名字
//如果名称是一个保留字或者包含空格和标点符号，或者是一个数字，则必须使用方括号的写法



var  o = {x:1,y:{z:3}};//==>一个示例对象
var a = [0,4,[5,6]];    //==>一个包含这个对象的示例数组
o.x;                    //==>1;表达式o的x属性
o.y;                    //==>{z:3}表达式o的y属性
o.y.z;                  //==>3表达式o.y的z属性
o["x"];                 //==>1;对象o的x属性
o["y"];                 //==>{z:3}对象o的y属性
o["y"]["z"];            //==>3对象o.y的z属性
a[1];                   //==>4表达式a中索引为1的元素
a[2];                   //==>[5,6]
a[2][1];                //==>6表达式a[2]中索引为1的元素



var a =function(){
    var a = 1;
    var b = 2;
    return [a,b];
}
a()[0];             //==>1；获取a函数返回的数组的第一个对象